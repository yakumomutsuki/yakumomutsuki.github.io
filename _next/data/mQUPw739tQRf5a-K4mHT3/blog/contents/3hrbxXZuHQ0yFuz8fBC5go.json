{"pageProps":{"title":"技術ブログを作ってみた","headerImage":{"metadata":{"tags":[]},"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"xozap2abqkk7"}},"id":"2Vz3KqmRNfL3JDXNjN7VyO","type":"Asset","createdAt":"2022-07-09T14:40:31.659Z","updatedAt":"2022-07-09T14:40:31.659Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"locale":"ja-JP"},"fields":{"title":"scott-graham-5fNmWej4tAA-unsplash.jpeg","description":"","file":{"url":"//images.ctfassets.net/xozap2abqkk7/2Vz3KqmRNfL3JDXNjN7VyO/163b9ea5d7b380285a2b6ded2eaa4e4c/scott-graham-5fNmWej4tAA-unsplash.jpeg.webp","details":{"size":1304192,"image":{"width":7360,"height":4912}},"fileName":"scott-graham-5fNmWej4tAA-unsplash.jpeg.webp","contentType":"image/webp"}}},"body":"<blockquote class=\"twitter-tweet\"><p lang=\"ja\" dir=\"ltr\">技術ブログを作る理由って、素振りでしょ</p>&mdash; 八雲睦月／むったん (@yakumomutsuki) <a href=\"https://twitter.com/yakumomutsuki/status/1541540259707891712?ref_src=twsrc%5Etfw\">June 27, 2022</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\nTwitterで言った手前、技術ブログを作りました。SEOとかアフィリエイトとか考えれば、はてなブログやnoteなどのサービスを使えばいいと思います。が、結局カスタマイズのしやすさや、最近話題のヘッドレスCMSをやってみた系の記事ということで、誰かの参考になれば幸いです。\n\n## ヘッドレスCMSとはなにか\n\nコンテンツは（外部）APIにて配信され、表示画面（ヘッド）はサービス運営者が実装します。そのためフロントエンドとなるWeb、モバイル(iPhone/Android)はそれぞれ実装をする必要がありますが、一方で言語やプラットフォームには左右されないため、さまざまなプラットフォームへの配信が可能となります。\n\nContentful、microCMS、Prismicなどのサービスによってコンテンツを管理し、記事の入稿や編集はそれらサービスの管理画面にて行います。\n\n## 使用したライブラリ・サービス\n\n- prismjs ソースコードのシンタックスハイライト\n- markdown-to-jsx Markdown形式のテキストをJSXに埋め込む\n- contentful 今回利用するcontentfulのAPIへ簡易にアクセスできるラッパーライブラリ\n\nなお、本ブログのNext.js × TypeScriptをベースとしています。\nシンタックスハイライトは以下のよう表示されます。\n\n```javascript\nfor( let i = 1; i <= 100; i ++ ) {\n  if( i % 15 === 0 ) {\n   　console.log( \"FizzBuzz\" );\n 　 } else if ( i % 5 === 0 ) {\n  　  console.log( \"Buzz\" );\n 　 } else if ( i % 3 === 0 ) {\n   　 console.log( \"Fizz\" );\n　  } else {\n   　 console.log( i );\n 　 }\n }\n```\n\n## 型定義生成\n\n型定義については、`contentful-typescript-codegen` を利用して作成できます。環境変数はnpm scriptに直接記述しましたが、dotenv等を導入してもよいかもしれません。自分は、nextのenvと競合すると面倒なため、このような形に落ち着きました。\n\npackage.json\n\n```json\n\"contentful-typescript-codegen\": \"CONTENTFUL_MANAGEMENT_API_ACCESS_TOKEN=xxxx CONTENTFUL_SPACE_ID=xxxx CONTENTFUL_ENVIRONMENT=xxxx contentful-typescript-codegen --output ./api/libs/contentful/types.d.ts\"\n```\n\n## 所感\n\ncontentfulを導入して記事を表示させるだけなら、1日もかからずできるかと思います。どういうレイアウトにしようかとか、記事一覧も作ろう、コンポーネント一覧も作りたい、タグ検索もしたいなどあればいろいろ調整が必要となりますが、そうでなければ簡単に導入できると思います。\n\nGitHub Actions まわりが妙にはまってしまい、General → Secrets より、Repository secrets を設定して、contentfulまわりの秘密情報を設定するところを、General → Environments より環境変数を利用するものだと思いこんでしまい、デプロイするのに時間がかかりました。\n\nhttps://docs.github.com/ja/actions/security-guides/encrypted-secrets\n\n貼っておきますが、正直わかりにくいですよねこれ...。\n\nソースコードのリンクを貼っておきますので、何かしらの参考になれば嬉しいです。\n","createdAt":"2022-07-04T00:00+09:00","editedAt":"2022-07-04T00:00+09:00"},"__N_SSG":true}